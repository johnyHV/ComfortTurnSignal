
trippling_avr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000290  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000290  00000304  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000031e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000350  2**2
                  CONTENTS, READONLY
  4 .debug_info   00000420  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000003e8  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000f1  00000000  00000000  00000b94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000169  00000000  00000000  00000c85  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	5d c0       	rjmp	.+186    	; 0xc0 <__vector_2>
   6:	51 c0       	rjmp	.+162    	; 0xaa <__vector_3>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	60 c0       	rjmp	.+192    	; 0xd4 <__vector_9>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	e0 e9       	ldi	r30, 0x90	; 144
  32:	f2 e0       	ldi	r31, 0x02	; 2
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	aa 37       	cpi	r26, 0x7A	; 122
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	aa e7       	ldi	r26, 0x7A	; 122
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	aa 37       	cpi	r26, 0x7A	; 122
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	0f d0       	rcall	.+30     	; 0x70 <main>
  52:	1c c1       	rjmp	.+568    	; 0x28c <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <initGpioPin>:
  56:	bc 9a       	sbi	0x17, 4	; 23
  58:	c4 9a       	sbi	0x18, 4	; 24
  5a:	c4 98       	cbi	0x18, 4	; 24
  5c:	bb 9a       	sbi	0x17, 3	; 23
  5e:	c3 9a       	sbi	0x18, 3	; 24
  60:	c3 98       	cbi	0x18, 3	; 24
  62:	ba 98       	cbi	0x17, 2	; 23
  64:	c2 9a       	sbi	0x18, 2	; 24
  66:	b9 98       	cbi	0x17, 1	; 23
  68:	c1 9a       	sbi	0x18, 1	; 24
  6a:	b8 98       	cbi	0x17, 0	; 23
  6c:	c0 9a       	sbi	0x18, 0	; 24
  6e:	08 95       	ret

00000070 <main>:
  70:	14 be       	out	0x34, r1	; 52
  72:	0f b6       	in	r0, 0x3f	; 63
  74:	f8 94       	cli
  76:	a8 95       	wdr
  78:	81 b5       	in	r24, 0x21	; 33
  7a:	88 61       	ori	r24, 0x18	; 24
  7c:	81 bd       	out	0x21, r24	; 33
  7e:	11 bc       	out	0x21, r1	; 33
  80:	0f be       	out	0x3f, r0	; 63
  82:	e9 df       	rcall	.-46     	; 0x56 <initGpioPin>
  84:	a8 95       	wdr
  86:	9e e0       	ldi	r25, 0x0E	; 14
  88:	88 e1       	ldi	r24, 0x18	; 24
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	f8 94       	cli
  8e:	a8 95       	wdr
  90:	81 bd       	out	0x21, r24	; 33
  92:	0f be       	out	0x3f, r0	; 63
  94:	91 bd       	out	0x21, r25	; 33
  96:	db d0       	rcall	.+438    	; 0x24e <CheckButton>
  98:	6c d0       	rcall	.+216    	; 0x172 <Flashing>
  9a:	8f e0       	ldi	r24, 0x0F	; 15
  9c:	97 e2       	ldi	r25, 0x27	; 39
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <main+0x2e>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x34>
  a4:	00 00       	nop
  a6:	a8 95       	wdr
  a8:	f6 cf       	rjmp	.-20     	; 0x96 <main+0x26>

000000aa <__vector_3>:
  aa:	1f 92       	push	r1
  ac:	0f 92       	push	r0
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	0f 92       	push	r0
  b2:	11 24       	eor	r1, r1
  b4:	1f bc       	out	0x2f, r1	; 47
  b6:	0f 90       	pop	r0
  b8:	0f be       	out	0x3f, r0	; 63
  ba:	0f 90       	pop	r0
  bc:	1f 90       	pop	r1
  be:	18 95       	reti

000000c0 <__vector_2>:
  c0:	1f 92       	push	r1
  c2:	0f 92       	push	r0
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	0f 92       	push	r0
  c8:	11 24       	eor	r1, r1
  ca:	0f 90       	pop	r0
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	0f 90       	pop	r0
  d0:	1f 90       	pop	r1
  d2:	18 95       	reti

000000d4 <__vector_9>:
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	0f 90       	pop	r0
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	0f 90       	pop	r0
  e4:	1f 90       	pop	r1
  e6:	18 95       	reti

000000e8 <FlashingLed>:
  e8:	fc 01       	movw	r30, r24
  ea:	94 81       	ldd	r25, Z+4	; 0x04
  ec:	91 30       	cpi	r25, 0x01	; 1
  ee:	09 f0       	breq	.+2      	; 0xf2 <FlashingLed+0xa>
  f0:	3f c0       	rjmp	.+126    	; 0x170 <FlashingLed+0x88>
  f2:	80 81       	ld	r24, Z
  f4:	83 30       	cpi	r24, 0x03	; 3
  f6:	e0 f5       	brcc	.+120    	; 0x170 <FlashingLed+0x88>
  f8:	21 81       	ldd	r18, Z+1	; 0x01
  fa:	32 81       	ldd	r19, Z+2	; 0x02
  fc:	2f 5f       	subi	r18, 0xFF	; 255
  fe:	3f 4f       	sbci	r19, 0xFF	; 255
 100:	32 83       	std	Z+2, r19	; 0x02
 102:	21 83       	std	Z+1, r18	; 0x01
 104:	43 81       	ldd	r20, Z+3	; 0x03
 106:	41 30       	cpi	r20, 0x01	; 1
 108:	a9 f4       	brne	.+42     	; 0x134 <FlashingLed+0x4c>
 10a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <TimeForFlashing>
 10e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <TimeForFlashing+0x1>
 112:	82 17       	cp	r24, r18
 114:	93 07       	cpc	r25, r19
 116:	60 f5       	brcc	.+88     	; 0x170 <FlashingLed+0x88>
 118:	12 82       	std	Z+2, r1	; 0x02
 11a:	11 82       	std	Z+1, r1	; 0x01
 11c:	13 82       	std	Z+3, r1	; 0x03
 11e:	28 b3       	in	r18, 0x18	; 24
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	00 84       	ldd	r0, Z+8	; 0x08
 126:	02 c0       	rjmp	.+4      	; 0x12c <FlashingLed+0x44>
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	0a 94       	dec	r0
 12e:	e2 f7       	brpl	.-8      	; 0x128 <FlashingLed+0x40>
 130:	82 2b       	or	r24, r18
 132:	1d c0       	rjmp	.+58     	; 0x16e <FlashingLed+0x86>
 134:	41 11       	cpse	r20, r1
 136:	1c c0       	rjmp	.+56     	; 0x170 <FlashingLed+0x88>
 138:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <TimeForFlashing>
 13c:	50 91 61 00 	lds	r21, 0x0061	; 0x800061 <TimeForFlashing+0x1>
 140:	42 17       	cp	r20, r18
 142:	53 07       	cpc	r21, r19
 144:	a8 f4       	brcc	.+42     	; 0x170 <FlashingLed+0x88>
 146:	12 82       	std	Z+2, r1	; 0x02
 148:	11 82       	std	Z+1, r1	; 0x01
 14a:	93 83       	std	Z+3, r25	; 0x03
 14c:	8f 5f       	subi	r24, 0xFF	; 255
 14e:	80 83       	st	Z, r24
 150:	83 30       	cpi	r24, 0x03	; 3
 152:	11 f4       	brne	.+4      	; 0x158 <FlashingLed+0x70>
 154:	14 82       	std	Z+4, r1	; 0x04
 156:	10 82       	st	Z, r1
 158:	28 b3       	in	r18, 0x18	; 24
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	00 84       	ldd	r0, Z+8	; 0x08
 160:	02 c0       	rjmp	.+4      	; 0x166 <FlashingLed+0x7e>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <FlashingLed+0x7a>
 16a:	80 95       	com	r24
 16c:	82 23       	and	r24, r18
 16e:	88 bb       	out	0x18, r24	; 24
 170:	08 95       	ret

00000172 <Flashing>:
 172:	8e e6       	ldi	r24, 0x6E	; 110
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	b8 df       	rcall	.-144    	; 0xe8 <FlashingLed>
 178:	84 e6       	ldi	r24, 0x64	; 100
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	b5 cf       	rjmp	.-150    	; 0xe8 <FlashingLed>

0000017e <CheckInput>:
 17e:	fc 01       	movw	r30, r24
 180:	86 b3       	in	r24, 0x16	; 22
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	01 84       	ldd	r0, Z+9	; 0x09
 186:	02 c0       	rjmp	.+4      	; 0x18c <CheckInput+0xe>
 188:	95 95       	asr	r25
 18a:	87 95       	ror	r24
 18c:	0a 94       	dec	r0
 18e:	e2 f7       	brpl	.-8      	; 0x188 <CheckInput+0xa>
 190:	80 fd       	sbrc	r24, 0
 192:	08 c0       	rjmp	.+16     	; 0x1a4 <CheckInput+0x26>
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	87 83       	std	Z+7, r24	; 0x07
 198:	85 81       	ldd	r24, Z+5	; 0x05
 19a:	96 81       	ldd	r25, Z+6	; 0x06
 19c:	01 96       	adiw	r24, 0x01	; 1
 19e:	96 83       	std	Z+6, r25	; 0x06
 1a0:	85 83       	std	Z+5, r24	; 0x05
 1a2:	01 c0       	rjmp	.+2      	; 0x1a6 <CheckInput+0x28>
 1a4:	17 82       	std	Z+7, r1	; 0x07
 1a6:	84 81       	ldd	r24, Z+4	; 0x04
 1a8:	81 11       	cpse	r24, r1
 1aa:	21 c0       	rjmp	.+66     	; 0x1ee <CheckInput+0x70>
 1ac:	87 81       	ldd	r24, Z+7	; 0x07
 1ae:	81 11       	cpse	r24, r1
 1b0:	1e c0       	rjmp	.+60     	; 0x1ee <CheckInput+0x70>
 1b2:	85 81       	ldd	r24, Z+5	; 0x05
 1b4:	96 81       	ldd	r25, Z+6	; 0x06
 1b6:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <TimeMinimalForEnableAutoFlashing>
 1ba:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <TimeMinimalForEnableAutoFlashing+0x1>
 1be:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <TimeForEnableAutoFlashing>
 1c2:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <TimeForEnableAutoFlashing+0x1>
 1c6:	48 17       	cp	r20, r24
 1c8:	59 07       	cpc	r21, r25
 1ca:	60 f4       	brcc	.+24     	; 0x1e4 <CheckInput+0x66>
 1cc:	82 17       	cp	r24, r18
 1ce:	93 07       	cpc	r25, r19
 1d0:	48 f4       	brcc	.+18     	; 0x1e4 <CheckInput+0x66>
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	84 83       	std	Z+4, r24	; 0x04
 1d6:	83 83       	std	Z+3, r24	; 0x03
 1d8:	16 82       	std	Z+6, r1	; 0x06
 1da:	15 82       	std	Z+5, r1	; 0x05
 1dc:	10 82       	st	Z, r1
 1de:	12 82       	std	Z+2, r1	; 0x02
 1e0:	11 82       	std	Z+1, r1	; 0x01
 1e2:	08 95       	ret
 1e4:	28 17       	cp	r18, r24
 1e6:	39 07       	cpc	r19, r25
 1e8:	10 f4       	brcc	.+4      	; 0x1ee <CheckInput+0x70>
 1ea:	16 82       	std	Z+6, r1	; 0x06
 1ec:	15 82       	std	Z+5, r1	; 0x05
 1ee:	08 95       	ret

000001f0 <SafetyCheck>:
 1f0:	cf 93       	push	r28
 1f2:	b2 99       	sbic	0x16, 2	; 22
 1f4:	11 c0       	rjmp	.+34     	; 0x218 <SafetyCheck+0x28>
 1f6:	c0 91 68 00 	lds	r28, 0x0068	; 0x800068 <DirectionalLightRight+0x4>
 1fa:	c1 30       	cpi	r28, 0x01	; 1
 1fc:	69 f4       	brne	.+26     	; 0x218 <SafetyCheck+0x28>
 1fe:	31 d0       	rcall	.+98     	; 0x262 <ClearStruct>
 200:	c3 98       	cbi	0x18, 3	; 24
 202:	c4 98       	cbi	0x18, 4	; 24
 204:	2f ef       	ldi	r18, 0xFF	; 255
 206:	84 e3       	ldi	r24, 0x34	; 52
 208:	9c e0       	ldi	r25, 0x0C	; 12
 20a:	21 50       	subi	r18, 0x01	; 1
 20c:	80 40       	sbci	r24, 0x00	; 0
 20e:	90 40       	sbci	r25, 0x00	; 0
 210:	e1 f7       	brne	.-8      	; 0x20a <SafetyCheck+0x1a>
 212:	00 c0       	rjmp	.+0      	; 0x214 <SafetyCheck+0x24>
 214:	00 00       	nop
 216:	18 c0       	rjmp	.+48     	; 0x248 <SafetyCheck+0x58>
 218:	86 b3       	in	r24, 0x16	; 22
 21a:	c8 2f       	mov	r28, r24
 21c:	c2 70       	andi	r28, 0x02	; 2
 21e:	81 fd       	sbrc	r24, 1
 220:	12 c0       	rjmp	.+36     	; 0x246 <SafetyCheck+0x56>
 222:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <DirectionalLightLeft+0x4>
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	79 f4       	brne	.+30     	; 0x248 <SafetyCheck+0x58>
 22a:	1b d0       	rcall	.+54     	; 0x262 <ClearStruct>
 22c:	c4 98       	cbi	0x18, 4	; 24
 22e:	c3 98       	cbi	0x18, 3	; 24
 230:	2f ef       	ldi	r18, 0xFF	; 255
 232:	84 e3       	ldi	r24, 0x34	; 52
 234:	9c e0       	ldi	r25, 0x0C	; 12
 236:	21 50       	subi	r18, 0x01	; 1
 238:	80 40       	sbci	r24, 0x00	; 0
 23a:	90 40       	sbci	r25, 0x00	; 0
 23c:	e1 f7       	brne	.-8      	; 0x236 <SafetyCheck+0x46>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <SafetyCheck+0x50>
 240:	00 00       	nop
 242:	c1 e0       	ldi	r28, 0x01	; 1
 244:	01 c0       	rjmp	.+2      	; 0x248 <SafetyCheck+0x58>
 246:	c0 e0       	ldi	r28, 0x00	; 0
 248:	8c 2f       	mov	r24, r28
 24a:	cf 91       	pop	r28
 24c:	08 95       	ret

0000024e <CheckButton>:
 24e:	d0 df       	rcall	.-96     	; 0x1f0 <SafetyCheck>
 250:	81 11       	cpse	r24, r1
 252:	06 c0       	rjmp	.+12     	; 0x260 <__stack+0x1>
 254:	8e e6       	ldi	r24, 0x6E	; 110
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	92 df       	rcall	.-220    	; 0x17e <CheckInput>
 25a:	84 e6       	ldi	r24, 0x64	; 100
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	8f cf       	rjmp	.-226    	; 0x17e <CheckInput>
 260:	08 95       	ret

00000262 <ClearStruct>:
 262:	ee e6       	ldi	r30, 0x6E	; 110
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	12 82       	std	Z+2, r1	; 0x02
 268:	11 82       	std	Z+1, r1	; 0x01
 26a:	13 82       	std	Z+3, r1	; 0x03
 26c:	14 82       	std	Z+4, r1	; 0x04
 26e:	10 82       	st	Z, r1
 270:	17 82       	std	Z+7, r1	; 0x07
 272:	16 82       	std	Z+6, r1	; 0x06
 274:	15 82       	std	Z+5, r1	; 0x05
 276:	e4 e6       	ldi	r30, 0x64	; 100
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	12 82       	std	Z+2, r1	; 0x02
 27c:	11 82       	std	Z+1, r1	; 0x01
 27e:	13 82       	std	Z+3, r1	; 0x03
 280:	14 82       	std	Z+4, r1	; 0x04
 282:	10 82       	st	Z, r1
 284:	17 82       	std	Z+7, r1	; 0x07
 286:	16 82       	std	Z+6, r1	; 0x06
 288:	15 82       	std	Z+5, r1	; 0x05
 28a:	08 95       	ret

0000028c <_exit>:
 28c:	f8 94       	cli

0000028e <__stop_program>:
 28e:	ff cf       	rjmp	.-2      	; 0x28e <__stop_program>
